filter {
  if [icinga][facility] == "JsonRpcConnection" {
    if [message] =~ /API client disconnected/ {
      grok {
        match => ["message","API client disconnected for identity '%{HOSTNAME:[icinga][clientendpoint]}'"]
        id => "icinga_clientdisconnected"
        add_tag => "icinga_clientdisconnected"
        tag_on_failure => ["_grokparsefailure","icinga_clientdisconnected_failed"]
        add_field => {
          "[icinga][eventtype]" => "client_disconnected"
        }
      }
    } else if [message] =~ /No messages for identity/ {
      grok {
        match => ["message","No messages for identity '%{HOSTNAME:[icinga][clientendpoint]}' have been received in the last %{NUMBER:[icinga][nomessageduration]} seconds."]
        id => "icinga_nomessagesforidentity"
        add_tag => "icinga_nomessagesforidentity"
        tag_on_failure => ["_grokparsefailure","icinga_nomessagesforidentity_failed"]
        add_field => {
          "[icinga][eventtype]" => "no_messages_for_identity"
        }
      }
    } else if [message] =~ /Received '/ {
      grok {
        match => ["message","Received '%{DATA:[icinga][messagetype]}' message from '%{HOSTNAME:[icinga][clientendpoint]}'"]
        id => "icinga_receivedmessage"
        add_tag => "icinga_receivedmessage"
        tag_on_failure => ["_grokparsefailure","icinga_receivedmessage_failed"]
        add_field => {
          "[icinga][eventtype]" => "received_message"
        }
      }
    } else if [message] =~ /Received certificate request/ {
      grok {
        match => ["message","Received certificate request for CN '%{HOSTNAME:[icinga][clientendpoint]}' signed by our CA."]
        id => "icinga_receivedcertificaterequest"
        add_tag => "icinga_receivedcertificaterequest"
        tag_on_failure => ["_grokparsefailure","icinga_receivedcertificaterequest_failed"]
        add_field => {
          "[icinga][eventtype]" => "received_certificate_request"
        }
      }
    } else if [message] =~ /The certificate for CN/ {
      grok {
        match => ["message","The certificate for CN '%{HOSTNAME:[icinga][clientendpoint]}' is valid and uptodate. Skipping automated renewal."]
        id => "icinga_certificatevalidanduptodate"
        add_tag => "icinga_certificatevalidanduptodate"
        tag_on_failure => ["_grokparsefailure","icinga_certificatevalidanduptodate_failed"]
        add_field => {
          "[icinga][eventtype]" => "certificate_valid_and_uptodate"
        }
      }
    }
  }
}
